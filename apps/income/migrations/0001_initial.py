# Generated by Django 3.1.7 on 2021-11-26 13:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clients', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=200)),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Value')),
                ('tax_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, verbose_name='Tax Percentage')),
                ('tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Tax Amount')),
                ('total_after_tax', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total After Tax')),
                ('total_collections', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Collections')),
                ('total_collected', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Collections')),
                ('total_collectable', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Collectable')),
                ('state', models.CharField(choices=[('remaining', 'Remaining'), ('collected', 'Collected')], max_length=11)),
                ('remaining_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Remaining Balance')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Project Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Project End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client', to='clients.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectCollections',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name='Amount')),
                ('collection_date', models.DateField(verbose_name='Collection Date')),
                ('state', models.CharField(choices=[('collected', 'Collected'), ('pending', 'Pending')], max_length=10)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='income.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=1)),
                ('total_service_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Service Price')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projectservices', to='income.project')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_service', to='services.service')),
            ],
            options={
                'unique_together': {('project', 'service')},
            },
        ),
    ]
